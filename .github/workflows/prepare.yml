name: Prepare release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Semantic Version string to use for this release
        required: true
      branch:
        description: Source ranch from which the version should be created. If omitted, 'main' is used. Please note that the branch should be available in all the core repositories.
        required: false
        default: main

jobs:
  prepare:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        repository: [ "runtime-metamodel", "gradleplugins", "connector", "identityhub", "federatedcatalog" ]
    steps:
      - uses: actions/checkout@v4
      - name: "Prepare release ${{ matrix.repos.name }}"
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh \
            "eclipse-edc" \
            "${{ matrix.repository }}" \
            "prepare-release.yml" \
            "{\"version\": \"${{ inputs.version }}\"}" \
            "${{ secrets.ORG_GITHUB_BOT_USER }}" \
            "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" \
            "${{ inputs.branch }}"

  prepare-technology:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: [ "technology-aws", "technology-azure", "technology-gcp" ]
    steps:
      - uses: actions/checkout@v4
      - name: "Prepare release ${{ matrix.repos.name }}"
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh \
            "eclipse-edc" \
            "${{ matrix.repository }}" \
            "prepare-release.yml" \
            "{\"version\": \"${{ inputs.version }}\"}" \
            "${{ secrets.ORG_GITHUB_BOT_USER }}" \
            "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" \
            "${{ inputs.branch }}"
      
  notify:
    needs: [ prepare ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        name: "Notify on discord"
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CI_WEBHOOK }}
          # if the publishing is skipped, that means the preceding test run failed
          status: ${{ needs.prepare.result }}
          title: "Release preparation"
          description: "Prepare release ${{ inputs.version }}"
          username: GitHub Actions
