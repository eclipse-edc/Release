name: Prepare release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Semantic Version string to use for this release
        required: true
      branch:
        description: Source ranch from which the version should be created. If omitted, 'main' is used. Please note that the branch should be available in all the core repositories.
        required: false
        default: main

jobs:

  Runtime-Metamodel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: RuntimeMetamodel ${{ inputs.version }}
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh "eclipse-edc" "runtime-metamodel" "prepare-release.yml" "{\"version\": \"${{ inputs.version }}\"}" "${{ secrets.ORG_GITHUB_BOT_USER }}" "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" "${{ inputs.branch }}"

  GradlePlugins:
    runs-on: ubuntu-latest
    needs: [ Runtime-Metamodel ]
    steps:
      - uses: actions/checkout@v4
      - name: GradlePlugins ${{ inputs.version }}
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh "eclipse-edc" "gradleplugins" "prepare-release.yml" "{\"version\": \"${{ inputs.version }}\"}" "${{ secrets.ORG_GITHUB_BOT_USER }}" "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" "${{ inputs.branch }}"

  Connector:
    runs-on: ubuntu-latest
    needs: [ GradlePlugins ]
    steps:
      - uses: actions/checkout@v4
      - name: Connector ${{ inputs.version }}
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh "eclipse-edc" "connector" "prepare-release.yml" "{\"version\": \"${{ inputs.version }}\"}" "${{ secrets.ORG_GITHUB_BOT_USER }}" "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" "${{ inputs.branch }}"

  IdentityHub-FederatedCatalog:
    runs-on: ubuntu-latest
    needs: [ Connector ]
    strategy:
      fail-fast: false
      matrix:
        repository: [ "identityhub", "federatedcatalog" ]
    steps:
      - uses: actions/checkout@v4
      - name: ${{ matrix.repository }} ${{ inputs.version }}
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh "eclipse-edc" "${{ matrix.repository }}" "prepare-release.yml" "{\"version\": \"${{ inputs.version }}\"}" "${{ secrets.ORG_GITHUB_BOT_USER }}" "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" "${{ inputs.branch }}"

  Technology:
    runs-on: ubuntu-latest
    needs: [ IdentityHub-FederatedCatalog ]
    strategy:
      fail-fast: false
      matrix:
        repository: [ "technology-aws", "technology-azure", "technology-gcp", "technology-huaweicloud" ]
    steps:
      - uses: actions/checkout@v4
      - name: ${{ matrix.repository }} ${{ inputs.version }}
        run: |
          chmod +x ./scripts/github_action.sh
          ./scripts/github_action.sh "eclipse-edc" "${{ matrix.repository }}" "prepare-release.yml" "{\"version\": \"${{ inputs.version }}\"}" "${{ secrets.ORG_GITHUB_BOT_USER }}" "${{ secrets.ORG_GITHUB_BOT_TOKEN }}" "${{ inputs.branch }}"

  Post-To-Discord:
    needs: [ Runtime-Metamodel, GradlePlugins, Connector, IdentityHub-FederatedCatalog, Technology ]
    if: "always()"
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        name: "Invoke discord webhook"
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CI_WEBHOOK }}
          status: ${{ needs.Runtime-Metamodel.result && needs.GradlePlugins.result && needs.Connector.result && needs.IdentityHub-FederatedCatalog.result && needs.Technology.result }}
          title: "Release Preparation"
          description: "Release preparation ${{ inputs.version }}"
          username: GitHub Actions
